package com.psi.revenue.assurance.m;

import com.tlc.common.DataRow;
import com.tlc.common.DataRowCollection;
import com.tlc.common.LongUtil;
import com.tlc.common.SystemInfo;
import com.tlc.gui.modules.common.ModelCollection;
import com.tlc.gui.modules.common.ReportItem;

@SuppressWarnings("serial")
public class ConsolidatedSalesCollection extends ModelCollection {
	protected String datefrom;
	protected String dateto;
	@Override
	public boolean hasRows() {
		DataRowCollection r = SystemInfo.getDb().QueryDataRows("SELECT  'WALLET ALLOCATION' TYPE ,CASE WHEN COUNT(DISTINCT TOACCOUNT) IS NULL THEN 0 ELSE COUNT(DISTINCT TOACCOUNT) END ACCOUNTNUMBERCOUNT,0 COMACCOUNTNUMBERCOUNT,0 CHAACCOUNTNUMBERCOUNT, CASE WHEN COUNT(1) IS NULL THEN 0 ELSE COUNT(1) END TRANSACTIONCOUNT,0 COMTRANSACTIONCOUNT,0 CHATRANSACTIONCOUNT,CASE WHEN SUM(AMOUNT) IS NULL THEN 0 ELSE SUM(AMOUNT) END TRANSACTIONAMOUNT,0 COMTRANSACTIONAMOUNT,0 CHATRANSACTIONAMOUNT FROM(SELECT T.* FROM  ADMDBMC.TBLTRANSACTIONS T  WHERE T.VOIDID IS NULL AND T.MAINWALLET=1  AND  TOALIAS NOT IN ('SOLBPH','RONNA_ONTING') AND MODULE = 1001 AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 ORDER BY T.TIMESTAMP  ASC)  D3 "
																+"UNION ALL "
																+"SELECT 'AIRTIME' TYPE,CASE WHEN ACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE ACCOUNTNUMBERCOUNT END ACCOUNTNUMBERCOUNT,CASE WHEN COMACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE COMACCOUNTNUMBERCOUNT END COMACCOUNTNUMBERCOUNT,CASE WHEN CHAACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE CHAACCOUNTNUMBERCOUNT END CHAACCOUNTNUMBERCOUNT,CASE WHEN AIRTIMECOUNT IS NULL THEN 0 ELSE AIRTIMECOUNT END AIRTIMECOUNT,CASE WHEN COMAIRTIMECOUNT IS NULL THEN 0 ELSE COMAIRTIMECOUNT END COMAIRTIMECOUNT,CASE WHEN CHAAIRTIMECOUNT IS NULL THEN 0 ELSE CHAAIRTIMECOUNT END CHAAIRTIMECOUNT,CASE WHEN AIRTIMEAMOUNT IS NULL THEN 0 ELSE AIRTIMEAMOUNT END AIRTIMEAMOUNT,CASE WHEN COMAIRTIMEAMOUNT IS NULL THEN 0 ELSE COMAIRTIMEAMOUNT END COMAIRTIMEAMOUNT,CASE WHEN CHAAIRTIMEAMOUNT IS NULL THEN 0 ELSE CHAAIRTIMEAMOUNT END CHAAIRTIMEAMOUNT FROM ( "
																+"SELECT  COUNT(DISTINCT FRACCOUNT) ACCOUNTNUMBERCOUNT, 1002 TYPE ,'CASH'ACCOUNTTYPE,COUNT(1) AIRTIMECOUNT, SUM(AMOUNT) AIRTIMEAMOUNT FROM (SELECT T.* FROM  ADMDBMC.TBLTRANSACTIONS T  INNER JOIN ADMDBMC.TBLACCOUNTINFO AI ON AI.ACCOUNTNUMBER = T.FRACCOUNT WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND MODULE = 1002 AND  T.MAINWALLET = 2 AND AI.ROOT = 2 AND REFERENCEID NOT IN ('1051711230000038','1051711240000000') ORDER BY T.TIMESTAMP ASC) D3 "
																+")A LEFT JOIN "
																+"(SELECT  COUNT(DISTINCT ACCOUNTNUMBER) COMACCOUNTNUMBERCOUNT, TYPE ,ACCOUNTTYPE,COUNT(1) COMAIRTIMECOUNT, SUM(CREDIT) COMAIRTIMEAMOUNT FROM (SELECT ROWNUM RID, D2.* FROM (SELECT D1.* FROM ADMDBMC.TBLTRANSACTIONDETAILS D1 INNER JOIN ADMDBMC.TBLTRANSACTIONS T ON T.REFERENCEID = D1.REFERENCEID WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND ACCOUNTTYPE  IN ('COMMISSION')  AND ALIAS NOT IN ('SOLBPH','RONNA_ONTING') AND T.MAINWALLET = 1 AND D1.TYPE = 1002 ORDER BY T.TIMESTAMP ASC,GLID ASC) D2) D3 GROUP BY TYPE,ACCOUNTTYPE "
																+")B ON A.TYPE = B.TYPE LEFT JOIN "
																+"(SELECT  COUNT(DISTINCT ACCOUNTNUMBER) CHAACCOUNTNUMBERCOUNT, TYPE ,ACCOUNTTYPE,COUNT(1) CHAAIRTIMECOUNT, SUM(DEBIT) CHAAIRTIMEAMOUNT FROM (SELECT ROWNUM RID, D2.* FROM (SELECT D1.* FROM ADMDBMC.TBLTRANSACTIONDETAILS D1 INNER JOIN ADMDBMC.TBLTRANSACTIONS T ON T.REFERENCEID = D1.REFERENCEID WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND ACCOUNTTYPE  IN ('CHARGES') AND ALIAS NOT IN ('SOLBPH','RONNA_ONTING') AND T.MAINWALLET = 1  AND D1.TYPE = 1002 ORDER BY T.TIMESTAMP ASC,GLID ASC) D2) D3 GROUP BY TYPE,ACCOUNTTYPE "
																+")C ON A.TYPE = C.TYPE "
																+"UNION ALL "
																+"SELECT 'ECASH' TYPE,CASE WHEN ACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE ACCOUNTNUMBERCOUNT END ACCOUNTNUMBERCOUNT,CASE WHEN COMACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE COMACCOUNTNUMBERCOUNT END COMACCOUNTNUMBERCOUNT,CASE WHEN CHAACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE CHAACCOUNTNUMBERCOUNT END CHAACCOUNTNUMBERCOUNT,CASE WHEN ECASHCOUNT IS NULL THEN 0 ELSE ECASHCOUNT END ECASHCOUNT,CASE WHEN COMECASHCOUNT IS NULL THEN 0 ELSE COMECASHCOUNT END COMECASHCOUNT,CASE WHEN CHAECASHCOUNT IS NULL THEN 0 ELSE CHAECASHCOUNT END CHAECASHCOUNT,CASE WHEN ECASHAMOUNT IS NULL THEN 0 ELSE ECASHAMOUNT END ECASHAMOUNT,CASE WHEN COMECASHAMOUNT IS NULL THEN 0 ELSE COMECASHAMOUNT END COMECASHAMOUNT,CASE WHEN CHAECASHAMOUNT IS NULL THEN 0 ELSE CHAECASHAMOUNT END CHAECASHAMOUNT FROM ( "
																+"SELECT  COUNT(DISTINCT FRACCOUNT) ACCOUNTNUMBERCOUNT, 1102 TYPE ,'CASH' ACCOUNTTYPE,COUNT(1) ECASHCOUNT, SUM(AMOUNT) ECASHAMOUNT FROM (SELECT T.* FROM  ADMDBMC.TBLTRANSACTIONS T INNER JOIN ADMDBMC.TBLACCOUNTINFO AI ON T.FRACCOUNT = AI.ACCOUNTNUMBER WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND MODULE = 1102 AND  T.MAINWALLET = 2 AND AI.ROOT = 2 ORDER BY T.TIMESTAMP ASC)  D3  "
																+")A LEFT JOIN "
																+"(SELECT  COUNT(DISTINCT ACCOUNTNUMBER) COMACCOUNTNUMBERCOUNT,TYPE ,ACCOUNTTYPE,COUNT(1) COMECASHCOUNT, SUM(CREDIT) COMECASHAMOUNT FROM (SELECT ROWNUM RID, D2.* FROM (SELECT D1.* FROM ADMDBMC.TBLTRANSACTIONDETAILS D1 INNER JOIN ADMDBMC.TBLTRANSACTIONS T ON T.REFERENCEID = D1.REFERENCEID WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND ACCOUNTTYPE IN ('COMMISSION') AND ALIAS NOT IN ('SOLBPH','RONNA_ONTING') AND T.MAINWALLET = 1 AND TYPE = 1102 ORDER BY T.TIMESTAMP ASC,GLID ASC) D2) D3 GROUP BY TYPE,ACCOUNTTYPE "
																+")B ON A.TYPE = B.TYPE LEFT JOIN "
																+"(SELECT  COUNT(DISTINCT ACCOUNTNUMBER) CHAACCOUNTNUMBERCOUNT, TYPE ,ACCOUNTTYPE,COUNT(1) CHAECASHCOUNT, SUM(DEBIT) CHAECASHAMOUNT FROM (SELECT ROWNUM RID, D2.* FROM (SELECT D1.* FROM ADMDBMC.TBLTRANSACTIONDETAILS D1 INNER JOIN ADMDBMC.TBLTRANSACTIONS T ON T.REFERENCEID = D1.REFERENCEID WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND ACCOUNTTYPE  IN ('CHARGES') AND ALIAS NOT IN ('SOLBPH','RONNA_ONTING') AND T.MAINWALLET = 1  AND D1.TYPE = 1102 ORDER BY T.TIMESTAMP ASC,GLID ASC) D2) D3 GROUP BY TYPE,ACCOUNTTYPE "
																+")C ON A.TYPE = C.TYPE "
																+"UNION ALL "
																+"SELECT 'BILLS' TYPE,CASE WHEN ACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE ACCOUNTNUMBERCOUNT END ACCOUNTNUMBERCOUNT,CASE WHEN COMACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE COMACCOUNTNUMBERCOUNT END COMACCOUNTNUMBERCOUNT,CASE WHEN CHAACCOUNTNUMBERCOUNT IS NULL THEN 0 ELSE CHAACCOUNTNUMBERCOUNT END CHAACCOUNTNUMBERCOUNT,CASE WHEN BILLSCOUNT IS NULL THEN 0 ELSE BILLSCOUNT END BILLSCOUNT,CASE WHEN COMBILLSCOUNT IS NULL THEN 0 ELSE COMBILLSCOUNT END COMBILLSCOUNT,CASE WHEN CHABILLSCOUNT IS NULL THEN 0 ELSE CHABILLSCOUNT END CHABILLSCOUNT,CASE WHEN BILLSAMOUNT IS NULL THEN 0 ELSE BILLSAMOUNT END BILLSAMOUNT,CASE WHEN COMBILLSAMOUNT IS NULL THEN 0 ELSE COMBILLSAMOUNT END COMBILLSAMOUNT,CASE WHEN CHABILLSAMOUNT IS NULL THEN 0 ELSE CHABILLSAMOUNT END CHABILLSAMOUNT FROM ( "
																+"SELECT  COUNT(DISTINCT FRACCOUNT) ACCOUNTNUMBERCOUNT, 1003 TYPE ,'CASH'ACCOUNTTYPE,COUNT(1) BILLSCOUNT, SUM(AMOUNT) BILLSAMOUNT FROM (SELECT T.* FROM  ADMDBMC.TBLTRANSACTIONS T  INNER JOIN ADMDBMC.TBLACCOUNTINFO AI ON AI.ACCOUNTNUMBER = T.FRACCOUNT WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND MODULE IN (1003,1103) AND  T.MAINWALLET = 2 AND AI.ROOT = 2 AND T.REFERENCEID NOT IN ('1051801180000060','1051801180000058','1051801180000057','1051801190000034')ORDER BY T.TIMESTAMP ASC)  D3 "
																+")A LEFT JOIN "
																+"(SELECT  COUNT(DISTINCT ACCOUNTNUMBER) COMACCOUNTNUMBERCOUNT,TYPE ,ACCOUNTTYPE,COUNT(1) COMBILLSCOUNT, SUM(CREDIT) COMBILLSAMOUNT FROM (SELECT ROWNUM RID, D2.* FROM (SELECT D1.* FROM ADMDBMC.TBLTRANSACTIONDETAILS D1 INNER JOIN ADMDBMC.TBLTRANSACTIONS T ON T.REFERENCEID = D1.REFERENCEID WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND ACCOUNTTYPE IN ('COMMISSION') AND ALIAS NOT IN ('SOLBPH','RONNA_ONTING') AND T.MAINWALLET = 1 AND TYPE IN (1003,1103) ORDER BY T.TIMESTAMP ASC,GLID ASC) D2) D3 GROUP BY TYPE,ACCOUNTTYPE "
																+")B ON A.TYPE = B.TYPE LEFT JOIN "
																+"(SELECT  COUNT(DISTINCT ACCOUNTNUMBER) CHAACCOUNTNUMBERCOUNT, TYPE ,ACCOUNTTYPE,COUNT(1) CHABILLSCOUNT, SUM(DEBIT) CHABILLSAMOUNT FROM (SELECT ROWNUM RID, D2.* FROM (SELECT D1.* FROM ADMDBMC.TBLTRANSACTIONDETAILS D1 INNER JOIN ADMDBMC.TBLTRANSACTIONS T ON T.REFERENCEID = D1.REFERENCEID WHERE T.VOIDID IS NULL  AND T.TIMESTAMP BETWEEN TO_DATE(?,'yyyy-MM-dd') AND TO_DATE(?,'yyyy-MM-dd') + 1 AND ACCOUNTTYPE  IN ('CHARGES') AND ALIAS NOT IN ('SOLBPH','RONNA_ONTING') AND T.MAINWALLET = 1  AND D1.TYPE IN (1003,1103) ORDER BY T.TIMESTAMP ASC,GLID ASC) D2) D3 GROUP BY TYPE,ACCOUNTTYPE "
																+")C ON A.TYPE = C.TYPE",this.datefrom,this.dateto,this.datefrom,this.dateto,this.datefrom,this.dateto,this.datefrom,this.dateto,this.datefrom,this.dateto,this.datefrom,this.dateto,this.datefrom,this.dateto,this.datefrom,this.dateto,this.datefrom,this.dateto,this.datefrom,this.dateto);
	     
					     if (!r.isEmpty())
					     {
					    	 for(DataRow row: r){
					    		 ReportItem m = new ReportItem();
					    		 for (String key : row.keySet()) {
							 	        m.setProperty(key, row.getString(key).toString());
							 	 }
					    		 m.setProperty("TRANSACTIONAMOUNT", row.getString("TRANSACTIONAMOUNT") == null ? "0.00" : LongUtil.toString(Long.parseLong(row.getString("TRANSACTIONAMOUNT").toString())));
					    		 m.setProperty("COMTRANSACTIONAMOUNT", row.getString("COMTRANSACTIONAMOUNT") == null ? "0.00" : LongUtil.toString(Long.parseLong(row.getString("COMTRANSACTIONAMOUNT").toString())));
					    		 m.setProperty("CHATRANSACTIONAMOUNT", row.getString("CHATRANSACTIONAMOUNT") == null ? "0.00" : LongUtil.toString(Long.parseLong(row.getString("CHATRANSACTIONAMOUNT").toString())));
						         
						         
						         add(m);
					    	 }
					     }
					     return r.size() > 0;
	}
	public String getDatefrom() {
		return datefrom;
	}
	public void setDatefrom(String datefrom) {
		this.datefrom = datefrom;
	}
	public String getDateto() {
		return dateto;
	}
	public void setDateto(String dateto) {
		this.dateto = dateto;
	}
	
}
